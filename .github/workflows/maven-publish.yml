# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  compile:
    runs-on: self-hosted
    strategy:
      matrix:
          java: [11, 17, 21]

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK ${{matrix.java}}
      uses: actions/setup-java@v4
      with:
        java-version: ${{matrix.java}}
        distribution: 'temurin'
        cache: maven
    - name: compile the code
      run: mvn compile
  security-check:
      runs-on: self-hosted
      needs: compile

      steps:
       - uses: actions/checkout@v4
       - name: Trivy FS Scan
         run: trivy fs --format table -o fs-report.json .
  test:
     runs-on: self-hosted
     needs: security-check

     steps:
       - name: checkout the code
         uses: actions/checkout@v4
       - name: test with maven
         run: mvn test

  build: 
      runs-on: self-hosted
      needs: test
      steps:
         - name: checkout the code
           uses: actions/checkout@v4
           with: 
              fetch-depth: 0
         - name: Build with Maven
           run: mvn clean install
  sonarqube-scan:
    runs-on: self-hosted
    needs: build
    steps:   
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0 # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
        env:
           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
           SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
        
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
         pollingTimeoutSec: 600
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
  deploy:
    runs-on: self-hosted
    needs: sonarqube-scan
    steps:
      - name: Docker Setup Build
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3.4.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
               
        
